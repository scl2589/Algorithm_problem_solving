from collections import Counter
def solution(clothes):
    counted = Counter([each for _, each in clothes])
    answer = 1
    
    for i in counted:
        answer *= (counted[i] + 1)
    
    return answer - 1

'''
테스트 1 〉	통과 (0.04ms, 10.3MB)
테스트 2 〉	통과 (0.03ms, 10.1MB)
테스트 3 〉	통과 (0.04ms, 10.2MB)
테스트 4 〉	통과 (0.04ms, 10.3MB)
테스트 5 〉	통과 (0.02ms, 10.2MB)
테스트 6 〉	통과 (0.03ms, 10.2MB)
테스트 7 〉	통과 (0.04ms, 10.1MB)
테스트 8 〉	통과 (0.04ms, 10.1MB)
테스트 9 〉	통과 (0.03ms, 10.1MB)
테스트 10 〉	통과 (0.04ms, 10.1MB)
테스트 11 〉	통과 (0.03ms, 10.2MB)
테스트 12 〉	통과 (0.04ms, 10.3MB)
테스트 13 〉	통과 (0.04ms, 10.2MB)
테스트 14 〉	통과 (0.03ms, 10.1MB)
테스트 15 〉	통과 (0.03ms, 10.2MB)
테스트 16 〉	통과 (0.03ms, 10.3MB)
테스트 17 〉	통과 (0.04ms, 10.1MB)
테스트 18 〉	통과 (0.03ms, 10.2MB)
테스트 19 〉	통과 (0.03ms, 10.2MB)
테스트 20 〉	통과 (0.03ms, 10.2MB)
테스트 21 〉	통과 (0.03ms, 10.3MB)
테스트 22 〉	통과 (0.03ms, 10.2MB)
테스트 23 〉	통과 (0.03ms, 10.2MB)
테스트 24 〉	통과 (0.03ms, 10.2MB)
테스트 25 〉	통과 (0.03ms, 10.2MB)
테스트 26 〉	통과 (0.04ms, 10.2MB)
테스트 27 〉	통과 (0.03ms, 10.2MB)
테스트 28 〉	통과 (0.03ms, 10.1MB)
'''

'''
단순히 생각하면 각 카테고리별 아이템 갯수를 구해서 다 곱하면 될 것 같다.
(모자의갯수) * (바지의갯수) * (안경의갯수)
하지만 이렇게하면 각 카테고리의 아이템이 “하나씩은 반드시 포함”되는 경우만 계산된다.

모든 카테고리를 다 사용할 필요가 없고, 그 카테고리의 아이템을 장착하지 않는 경우가 있기 때문에,
각 갯수에 하나씩 추가를 해서 계산해야 한다.
(모자의갯수 + 1) * (바지의갯수 + 1) * (안경의갯수 + 1)

이렇게 되면 문제점이 하나라도 의상을 착용하지 않은 경우가 포함된다.
그렇기 때문에 1을 빼며 계산해준다. 
(모자의갯수 + 1) * (바지의갯수 + 1) * (안경의갯수 + 1) - 1
'''